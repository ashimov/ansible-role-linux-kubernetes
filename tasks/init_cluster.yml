---

- name: Check cluster status
  ansible.builtin.shell: kubectl get nodes
  ignore_errors: true
  register: cluster_exist
  
- block:
    
    - ansible.builtin.set_fact:
        apiserver_sans: "{{ (sans_base + [kubernetes_vip_ip] ) | unique }}"

    - name: render kubeadm-init.yml
      ansible.builtin.template:
        src: kubeadm-init.yml.j2
        dest: /root/kubeadm-init.yml
    
    - include_tasks: 
        file: setup_vip.yml
      when: 
        - setup_vip
        - inventory_hostname in groups['kubemaster']

    - ansible.builtin.set_fact:
        kubeadm_extra_args: "{% if groups['kubemaster'] | length > 1 %}--upload-certs{% else %}{% endif %}"

    - name: Init kubernetes cluster
      ansible.builtin.shell: kubeadm init --config /root/kubeadm-init.yml {{ kubeadm_extra_args }} > /root/kubeinit.log
    
    - name: Create ~/.kube directory
      ansible.builtin.file: 
        name: ~/.kube
        state: directory
    
    - name: Populate .kube/config file
      ansible.builtin.copy: 
        src: /etc/kubernetes/admin.conf
        dest: ~/.kube/config
        remote_src: yes

    - include_tasks: 
        file: install_cni.yml

  when: 
    - inventory_hostname in groups['kubemaster']
    - kubernetes_init
    - cluster_exist.rc == 1
  any_errors_fatal: true
  ignore_errors: "{{ ansible_check_mode }}"
