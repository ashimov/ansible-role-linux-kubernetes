---
apiVersion: kubeadm.k8s.io/v1beta4
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: abcdef.0123456789abcdef
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: {{ kubernetes_ip_address }}
  bindPort: {{ kubernetes_api_port }}
nodeRegistration:
  criSocket: unix://{{ cri_socket_paths[kubernetes_cri] }}
  imagePullPolicy: IfNotPresent
  imagePullSerial: true
  name: {{ ansible_hostname|lower }}
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
timeouts:
  controlPlaneComponentHealthCheck: 4m0s
  discovery: 5m0s
  etcdAPICall: 2m0s
  kubeletHealthCheck: 4m0s
  kubernetesAPICall: 1m0s
  tlsBootstrap: 5m0s
  upgradeManifests: 5m0s
---
apiServer:
  certSANs: 
{% for san in apiserver_sans %}
  - "{{ san }}"
{% endfor %}
apiVersion: kubeadm.k8s.io/v1beta4
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
controllerManager: {}
dns: {}
imageRepository: {{ kubernetes_image_repository }}
kind: ClusterConfiguration
kubernetesVersion: {{ kubernetes_version }}
{% if groups['kubemaster'] | length > 1  %}
controlPlaneEndpoint: {{ kubernetes_vip_ip }}:{{ kubernetes_api_port }}
{% endif %}
caCertificateValidityPeriod: 87600h0m0s
certificateValidityPeriod: 8760h0m0s
networking:
  dnsDomain: {{ kubernetes_dns_domain }}
  podSubnet: {{ kubernetes_pod_subnet }}
  serviceSubnet: {{ kubernetes_service_subnet }}
proxy: {}
scheduler: {}
etcd:
  local:
    dataDir: /var/lib/etcd
---
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
cgroupDriver: systemd